<?php

// $Id: popdata.module, Exp $
/* @file
 * Drupal Module: Data Population
 * Specifically used to populate data for RMI
 */

/**
 * Implements hook_menu().
 */
function popdata_menu() {
    $items = array();
    // Submissions listing.
    $items['popdata/import/sample_data'] = array(
        'title' => 'Import Sample Data',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('popdata_import_sample_data_form'),
        'access callback' => 'user_access',
        'access arguments' => array('import datagroup uploaded files'),
        'description' => 'import sample data',
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Implementation of hook_perm
 */
function popdata_perm() {
    return array("import datagroup uploaded files");
}

/**
 *
 * @return array 
 */

function popdata_import_sample_data_form() {
    global $base_url;
    
    $form = array();
    
    $form['#attributes'] = array('enctype' => "multipart/form-data");
    
    $sql = "SELECT nid, title FROM {node} WHERE type = '%s' ORDER BY title";
    $sql_result = db_query($sql, "webform");
    $datagroup_options = array("" => t("Select Data Group"));
    while($rec = db_fetch_object($sql_result)) {
        $datagroup_options[$rec->nid] = $rec->title;
    }
    
    $sub_datagroup_options = array("" => t("Select Sub Data Group"));
    if($_GET["did"]) {
        $sql = "SELECT fieldset_cid, fieldset_name FROM {webform_addmore} WHERE nid = %d ORDER BY fieldset_name";
        $sql_result = db_query($sql, $_GET["did"]);
        while($rec = db_fetch_object($sql_result)) {
            $sub_datagroup_options[$rec->fieldset_cid] = $rec->fieldset_name;
        }
    }
    
   $form["data_group"] = array(
       "#type" => "select",
       "#title" => t("Select Data Group"),
       "#description" => t("Select Data Group to import."),
       "#required" => TRUE,
       "#options" => $datagroup_options,
       "#default_value" => ($_GET["did"]) ? $_GET["did"] : "",
       "#attributes" => array("onchange" => "window.location = 'sample_data?did='+this.value")
   );
   $form["sub_data_group"] = array(
       "#type" => "select",
       "#title" => t("Select Sub Data Group"),
       "#description" => t("Select Sub Data Group if you want to import sub data group instances. Do not select otherwise."),
       "#options" => $sub_datagroup_options
   );
   $form["file"] = array(
       "#type" => "file",
       "#title" => t("Upload CSV file."),
       "#description" => t("Upload the respective template file"),
   );
   $form["submit"] = array(
       "#type" => "submit",
       "#value" => "Import Data"
   );
    return $form;
}



function popdata_import_sample_data_form_submit($form_id, $form_values) {
    $dir = file_directory_path() . '/imports';
    if (file_check_directory($dir)) {
        $dir .= '/' . time() . "csv";
        $file = file_save_upload('file', array(), $dir, FALSE);
        
        if (!$file) {
            drupal_set_message('ERROR uploading the file to ' . $dir);
        } 
        else if(substr($file->filename, -3) != "csv") {
            drupal_set_message(t('File format is incorrect. Please upload csv file.'), 'error');
            unlink($file->filepath);
        }
        
        else {
            if($form_values["values"]["sub_data_group"]) {
                _popdata_import_sub_datagroup_sample_data($file, $form_values["values"]["data_group"], $form_values["values"]["sub_data_group"]);
            }
            else {
                _popdata_import_sample_data($file, $form_values["values"]["data_group"]);   
            }
            unlink($file->filepath);
            drupal_set_message('The file: <strong>"' . $file->filename . '"</strong> is successfully imported.');
        }
    } else {
        drupal_set_message(t('WARNING: Server DIR is not accessible. Consult with site admin!'), 'status');
    }
}

function _popdata_import_sample_data($file, $nid) {
    $created = time();
    $remote_add = "127.0.0.1";
    
    if (($handle = fopen($file->filepath, "r")) !== FALSE) {
        $head_row = fgetcsv($handle, 1000, ","); // skip the first line of the file
        while (($data_row = fgetcsv($handle, 1000, ",")) !== FALSE) {
            $cols_count = count($data_row);
            $uid = popdata_get_user_id_by_user_mail($data_row[1]);
            db_query("INSERT INTO {datagroup_submissions} (nid, uid, is_draft, submitted, remote_addr) VALUES(%d, %d, %d, '%s', '%s')", $nid, $uid, 0, $created, $remote_add);
            $sid = db_last_insert_id('datagroup_submissions', 'sid');
            db_query("INSERT INTO {popdata} (datagroup_id, sid, uid, mail, created) VALUES(%d, %d, %d, '%s', '%s')", $data_row[0], $sid, $uid, $data_row[1], $created);
            if($nid != 3) {
                for ($c = 2; $c < $cols_count; $c++) {
                    $cid = popdata_get_component_id($nid, $head_row[$c]);
                    db_query("INSERT INTO {datagroup_submitted_data} VALUES(%d, %d, %d, '%s', %d)", $nid, $sid, $cid, $data_row[$c], $uid);
                }
            }
            
        }
        fclose($handle);
    }
    else {
        drupal_set_message(t('File upload was successful, but there was an error reading the file on server.'), 'error');
    }
}

function popdata_get_user_id_by_user_mail($mail) {
    return db_result(db_query("SELECT uid FROM {users} WHERE mail = '%s'", $mail));
}
function popdata_get_component_id($nid, $form_key) {
    return db_result(db_query("SELECT cid FROM {webform_component} WHERE nid = %d AND form_key = '%s'", $nid, $form_key));
}
function _popdata_import_sub_datagroup_sample_data($file, $nid, $cid) {
    $created = time();
    $remote_add = "127.0.0.1";
    
    if (($handle = fopen($file->filepath, "r")) !== FALSE) {
        $head_row = fgetcsv($handle, 1000, ","); // skip the first line of the file
        while (($data_row = fgetcsv($handle, 1000, ",")) !== FALSE) {
            $cols_count = count($data_row);
            $datagroup_submission = popdata_get_popdata_submission($data_row[0], $nid);
            $sub_datagroup_title = popdata_get_sub_datagroup_name($nid, $cid);
            db_query("INSERT INTO {sub_datagroup_submissions} (nid, sid, uid, submitted, cid, title) VALUES(%d, %d, %d, '%s', %d, '%s')", $nid, $datagroup_submission->sid, $datagroup_submission->uid, $datagroup_submission->created, $cid, $sub_datagroup_title);
            $ssid = db_last_insert_id('sub_datagroup_submissions', 'ssid');
            for ($c = 1; $c < $cols_count; $c++) {
                $component_id = popdata_get_component_id($nid, $head_row[$c]);
                db_query("INSERT INTO {sub_datagroup_submitted_data} (ssid, cid, data) VALUES(%d, %d, '%s')", $ssid, $component_id, $data_row[$c]);
            }
        }
        fclose($handle);
    }
    else {
        drupal_set_message(t('File upload was successful, but there was an error reading the file on server.'), 'error');
    }
}
function popdata_get_sub_datagroup_name($nid, $cid) {
    return db_result(db_query("SELECT fieldset_name FROM {webform_addmore} WHERE nid = %d AND fieldset_cid = %d", $nid, $cid));
}
function popdata_get_popdata_submission($datagroup_id, $nid) {
    return db_fetch_object(db_query("SELECT p.datagroup_id, p.sid, p.uid, p.created FROM {popdata} p INNER JOIN {datagroup_submissions} d ON d.sid = p.sid WHERE p.datagroup_id = %d AND d.nid = %d", $datagroup_id, $nid));
}