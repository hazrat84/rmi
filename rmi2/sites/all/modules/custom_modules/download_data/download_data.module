<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
function download_data_menu() {
    $items = array();

    $items['download/data/%'] = array(
        'title' => '',
        'page callback' => 'download_data_csv',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['download/all/data'] = array(
        'title' => '',
        'page callback' => 'download_all_data_groups',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['download/shared-with-me/data'] = array(
        'title' => '',
        'page callback' => 'download_shared_with_me_data_groups',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}
function download_data_csv() {
    global $user;
    $nid = arg(2);
    $col_name_arr = array();
    $col_val_arr = array();
    $file_path_arr = array();

    $node_title = db_result(db_query("SELECT title FROM {node} WHERE nid = " . $nid));
    $node_title = str_replace(' ', '_', strtolower($node_title));

    // data_group_submission_id
    $sid_result = db_query("SELECT sid FROM {datagroup_submissions} s
                              INNER JOIN {users} u ON u.uid = s.uid
                              INNER JOIN {node} n ON n.nid = s.nid
                              WHERE s.uid = %d AND s.nid = %d", $user->uid, $nid);
    while ($sid_row = db_fetch_object($sid_result)) {
        $result = db_query("SELECT wc.`cid`, wc.`name`, wc.`type`, dsd.data  FROM `datagroup_submitted_data` dsd
                        INNER JOIN `webform_component` wc ON wc.cid= dsd.cid
                        WHERE dsd.uid = %d AND wc.nid = %d and dsd.sid = %d ORDER BY  `wc`.`cid` ASC ", $user->uid, $nid, $sid_row->sid);
        while ($row = db_fetch_object($result)) {
            if (!in_array($row->name, $col_name_arr)) {
                $col_name_arr[] = $row->name;
            }
            if ($row->type == 'file') {
                $file_result = db_query("SELECT filename,filepath from files where fid = %d", $row->data);
                $file_info = $row = db_fetch_object($file_result);
                $col_val_arr[] = $file_info->filename;
                $file_path_arr[] = $file_info->filepath;
            } else {
                $col_val_arr[] = $row->data;
            }
        }
    }
    
    // file name
    $folder_name = time();
    mkdir("sites/default/files/downloads/" . $folder_name, 0777);
    $csv_filename = 'sites/default/files/downloads/' . $folder_name . '/' . $node_title . $nid . ".csv";
    $fp = fopen($csv_filename, "w");

    $line = "";
    $comma = "";
    foreach ($col_name_arr as $val) {
        $line .= $comma . '"' . str_replace('"', '""', $val) . '"';
        $comma = ",";
    }
    $line .= "\n";
    fputs($fp, $line);

    $line = "";
    $comma = "";
    $count = 0;
    $col_count = count($col_name_arr);
    foreach ($col_val_arr as $value) {
        $line .= $comma . '"' . str_replace('"', '""', $value) . '"';
        $comma = ",";
        $count = $count + 1;
        if ($count % $col_count == 0) {
            $line .= "\n";
            fputs($fp, $line);
            $line = "";
            $comma = "";
        }
    }

    fclose($fp);

    // copy files if there is any attached files
    if (isset($file_path_arr) && !empty($file_path_arr)) {
        foreach ($file_path_arr as $file_path) {
            $file_arr = explode('/', $file_path);
            $attached_file_name = end($file_arr);
            @copy($file_path, 'sites/default/files/downloads/' . $folder_name . '/' . $attached_file_name);
        }
    }

    $zip = new ZipArchive();

    $ow = 1;
    $zip_filename = $folder_name . '.zip';
    $filepath = 'sites/default/files/downloads/' . $folder_name . '/';
    $file = "sites/default/files/downloads/" . $folder_name . '/' . $zip_filename;

    if ($zip->open($file, $ow ? ZIPARCHIVE::OVERWRITE : ZIPARCHIVE::CREATE) === TRUE) {
        $zip->addFile($csv_filename, $node_title . $nid . ".csv");
        // Add the files to the .zip file
        if (isset($file_path_arr) && !empty($file_path_arr)) {
            foreach ($file_path_arr as $file_path) {
                $file_arr = explode('/', $file_path);
                $attached_file_name = end($file_arr);
                $zip->addFile('sites/default/files/downloads/' . $folder_name . '/' . $attached_file_name, $attached_file_name);
            }
        }
        // Closing the zip file
        $zip->close();
    }


    // http headers for zip downloads http://perishablepress.com/http-headers-file-downloads/ (Download Headers Link)
    header("Pragma: public");
    header("Expires: 0");
    header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
    header("Cache-Control: public");
    header("Content-Description: File Transfer");
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $zip_filename . "\"");
    header("Content-Transfer-Encoding: binary");
    header("Content-Length: " . filesize($filepath . $zip_filename));
    ob_end_flush();
    @readfile($filepath . $zip_filename);
    $delete_filepath = 'sites/default/files/downloads/' . $folder_name;

    // http://stackoverflow.com/questions/7288029/php-delete-directory-that-is-not-empty
    function rmdir_recursive($dir) {
        foreach (scandir($dir) as $file) {
            if ('.' === $file || '..' === $file)
                continue;
            if (is_dir("$dir/$file"))
                rmdir_recursive("$dir/$file");
            else
                unlink("$dir/$file");
        }
        rmdir($dir);
    }

    rmdir_recursive($delete_filepath);
}

function download_all_data_groups() {
    global $user;
    $col_name_arr = array();
    $col_val_arr = array();
    $file_path_arr = array();
    $main_folder = 0;

    $get_all_nodes_qry = db_query("SELECT nid FROM  datagroup_submissions WHERE uid='" . $user->uid . "' group by nid");

    while ($user_node = db_fetch_object($get_all_nodes_qry)) {
        $nid = $user_node->nid;

        $node_title = db_result(db_query("SELECT title FROM {node} WHERE nid = " . $nid));
        $node_title = str_replace(' ', '_', strtolower($node_title));

        // data_group_submission_id
        $sid_result = db_query("SELECT sid FROM {datagroup_submissions} s
                              INNER JOIN {users} u ON u.uid = s.uid
                              INNER JOIN {node} n ON n.nid = s.nid
                              WHERE s.uid = %d AND s.nid = %d", $user->uid, $nid);

        while ($sid_row = db_fetch_object($sid_result)) {
            if ($main_folder == 0) {
                $folder_name = time();
                mkdir("sites/default/files/downloads/" . $folder_name, 0777);

                $zip = new ZipArchive();

                $ow = 1;
                $zip_filename = $folder_name . '.zip';
                $filepath = 'sites/default/files/downloads/' . $folder_name . '/';
                $file = "sites/default/files/downloads/" . $folder_name . '/' . $zip_filename;
            }

            $result = db_query("SELECT wc.`cid`, wc.`name`, wc.`type`, dsd.data  FROM `datagroup_submitted_data` dsd
                          INNER JOIN `webform_component` wc ON wc.cid= dsd.cid
                          WHERE dsd.uid = %d AND wc.nid = %d and dsd.sid = %d ORDER BY  `wc`.`cid` ASC ", $user->uid, $nid, $sid_row->sid);
            while ($row = db_fetch_object($result)) {
                if (!in_array($row->name, $col_name_arr)) {
                    $col_name_arr[] = $row->name;
                }
                if ($row->type == 'file') {
                    $file_result = db_query("SELECT filename,filepath from files where fid = %d", $row->data);
                    $file_info = $row = db_fetch_object($file_result);
                    $col_val_arr[] = $file_info->filename;
                    $file_path_arr[] = $file_info->filepath;
                } else {
                    $col_val_arr[] = $row->data;
                }
            }
            $main_folder = 1;
        }

        $dg_folder = $node_title;
        mkdir("sites/default/files/downloads/" . $folder_name . '/' . $dg_folder, 0777);
        $csv_filename = 'sites/default/files/downloads/' . $folder_name . '/' . $dg_folder . '/' . $node_title . ".csv";
        $fp = fopen($csv_filename, "w");
        $line = "";
        $comma = "";
        foreach ($col_name_arr as $val) {
            $line .= $comma . '"' . str_replace('"', '""', $val) . '"';
            $comma = ",";
        }
        $line .= "\n";
        fputs($fp, $line);

        $line = "";
        $comma = "";
        $count = 0;
        $col_count = count($col_name_arr);
        foreach ($col_val_arr as $value) {
            $line .= $comma . '"' . str_replace('"', '""', $value) . '"';
            $comma = ",";
            $count = $count + 1;
            if ($count % $col_count == 0) {
                $line .= "\n";
                fputs($fp, $line);
                $line = "";
                $comma = "";
            }
        }

        fclose($fp);

        // copy files if there is any attached files
        if (isset($file_path_arr) && !empty($file_path_arr)) {
            foreach ($file_path_arr as $file_path) {
                $file_arr = explode('/', $file_path);
                $attached_file_name = end($file_arr);
                @copy($file_path, 'sites/default/files/downloads/' . $folder_name . '/' . $dg_folder . '/' . $attached_file_name);
            }
        }

        // Creating Zip File
        //if($zip->open($file,$ow?ZIPARCHIVE::OVERWRITE:ZIPARCHIVE::CREATE)===TRUE)
        if ($zip->open($file, ZIPARCHIVE::CREATE) === TRUE) {
            $zip->addEmptyDir($dg_folder); //$zip->addEmptyDir('shabir');

            $csv_file = $node_title . ".csv";
            $zip->addFile('sites/default/files/downloads/' . $folder_name . '/' . $dg_folder . '/' . $node_title . ".csv", $dg_folder . '/' . $csv_file);
            // Add the files to the .zip file
            if (isset($file_path_arr) && !empty($file_path_arr)) {
                foreach ($file_path_arr as $file_path) {//echo $attached_file_name;
                    $file_arr = explode('/', $file_path);
                    $attached_file_name = end($file_arr);
                    $zip->addFile('sites/default/files/downloads/' . $folder_name . '/' . $dg_folder . '/' . $attached_file_name, $dg_folder . '/' . $attached_file_name);
                }
            }
            // Closing the zip file
            $zip->close();
        }

        $col_name_arr  = array();
        $col_val_arr   = array();
        $file_path_arr = array();
    } // while loop of getting all nodes
    // http headers for zip downloads http://perishablepress.com/http-headers-file-downloads/ (Download Headers Link)
    header("Pragma: public");
    header("Expires: 0");
    header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
    header("Cache-Control: public");
    header("Content-Description: File Transfer");
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $zip_filename . "\"");
    header("Content-Transfer-Encoding: binary");
    header("Content-Length: " . filesize($filepath . $zip_filename));
    ob_end_flush();
    @readfile($filepath . $zip_filename);
    $delete_filepath = 'sites/default/files/downloads/' . $folder_name;

    // http://stackoverflow.com/questions/7288029/php-delete-directory-that-is-not-empty
    function rmdir_recursive($dir) {
        foreach (scandir($dir) as $file) {
            if ('.' === $file || '..' === $file)
                continue;
            if (is_dir("$dir/$file"))
                rmdir_recursive("$dir/$file");
            else
                unlink("$dir/$file");
        }
        rmdir($dir);
    }

    rmdir_recursive($delete_filepath);
}

function download_shared_with_me_data_groups() {
    global $user;
    $uid = $user->uid; // my id
    $share_id = arg(3); // The shared uid, one who shared the data with me
    $nid = arg(4);
    
    $col_name_arr = array();
    $col_val_arr = array();
    $file_path_arr = array();
    $node_title = db_result(db_query("SELECT title FROM {node} WHERE nid = " . $nid));
    $node_title = str_replace(' ', '_', strtolower($node_title));
    /* $shared_fields = db_query("SELECT shared_fields FROM data_group_sharing ds, data_group_shared_instance di WHERE
      ds.share_id = di.shared_id AND ds.uid = %d AND contact_uid = %d AND status = 1", $uid, $share_id, 1); */
    $fields_sql = db_result(db_query("SELECT shared_fields FROM `data_group_sharing` WHERE  uid = %d AND contact_uid = %d AND nid = %d and shared_fields != '' ", $uid, $share_id, $nid));
    if($fields_sql !='')
    {
      $shared_fields = unserialize($fields_sql);
    }
    
    if(!empty($shared_fields))
    {
      foreach ($shared_fields as $key => $value) {
          $parent = db_result(db_query("SELECT `pid` FROM webform_component WHERE cid = %d", $value));
          if (!$parent) {
              $field_name = db_result(db_query("SELECT `name` FROM webform_component WHERE cid = %d", $value));
              //echo $value."<br/>";
              //echo $field_name."<br/>";
              $col_name_arr[] = $field_name;
              //   echo $query = "SELECT distinct(subm_data.sid), subm_data.cid ,subm_data.data  FROM datagroup_submitted_data AS subm_data
              //     INNER JOIN datagroup_submissions subm ON subm.sid = subm_data.sid
              //     INNER JOIN  data_group_shared_instance data_inst ON data_inst.sid = subm.sid
              //     INNER JOIN node n ON n.nid = subm.nid
              //     INNER JOIN data_group_sharing ds on ds.share_id = data_inst.shared_id
              //     WHERE ds.uid = $uid AND ds.contact_uid = $share_id AND subm_data.cid = $value AND n.nid = $nid AND ds.status = 1";
              $query = "SELECT distinct(subm_data.sid), subm_data.cid ,subm_data.data  FROM datagroup_submitted_data AS subm_data
                    INNER JOIN datagroup_submissions subm ON subm.sid = subm_data.sid
                    INNER JOIN  data_group_shared_instance data_inst ON data_inst.sid = subm.sid
                    INNER JOIN node n ON n.nid = subm.nid
                    INNER JOIN data_group_sharing ds on ds.share_id = data_inst.shared_id
                    WHERE ds.uid = %d AND ds.contact_uid = %d AND subm_data.cid = %d AND n.nid = %d AND ds.status = 1";
              $result = db_query($query, $uid, $share_id, $value, $nid);
              $shared_data_arr = db_fetch_array($result);
              //print_r($shared_data_arr)."<hr/>";
              $col_val_arr[] = $shared_data_arr['data'];
          }
      }
    }
    // file name
    $folder_name = time();
    mkdir("sites/default/files/downloads/" . $folder_name, 0777);
    $zip = new ZipArchive();
    $ow = 1;
    $zip_filename = $folder_name . '.zip';
    $filepath = 'sites/default/files/downloads/' . $folder_name . '/';
    $file = "sites/default/files/downloads/" . $folder_name . '/' . $zip_filename;
    $csv_filename = 'sites/default/files/downloads/' . $folder_name . '/' . $node_title . $nid . ".csv";
    $fp = fopen($csv_filename, "w");
    $line = "";
    $comma = "";
    foreach ($col_name_arr as $val) {
        $line .= $comma . '"' . str_replace('"', '""', $val) . '"';
        $comma = ",";
    }
    $line .= "\n";
    fputs($fp, $line);

    $line = "";
    $comma = "";
    $count = 0;
    $col_count = count($col_name_arr);
    foreach ($col_val_arr as $value) {
        $line .= $comma . '"' . str_replace('"', '""', $value) . '"';
        $comma = ",";
        $count = $count + 1;
        if ($count % $col_count == 0) {
            $line .= "\n";
            fputs($fp, $line);
            $line = "";
            $comma = "";
        }
    }
    fclose($fp);
    $dg_folder = $node_title;
    if ($zip->open($file, $ow ? ZIPARCHIVE::OVERWRITE : ZIPARCHIVE::CREATE) === TRUE) {
        $zip->addEmptyDir($dg_folder);

        $csv_file = $node_title . ".csv";
        $zip->addFile('sites/default/files/downloads/' . $folder_name . '/' . $node_title . $nid . ".csv", $dg_folder . '/' . $csv_file);
        // Add the files to the .zip file
        if (isset($file_path_arr) && !empty($file_path_arr)) {
            foreach ($file_path_arr as $file_path) {//echo $attached_file_name;
                $file_arr = explode('/', $file_path);
                $attached_file_name = end($file_arr);
                $zip->addFile('sites/default/files/downloads/' . $folder_name . '/' . $dg_folder . '/' . $attached_file_name, $dg_folder . '/' . $attached_file_name);
            }
        }
        // Closing the zip file
        $zip->close();
    }
    //exit;
    header("Pragma: public");
    header("Expires: 0");
    header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
    header("Cache-Control: public");
    header("Content-Description: File Transfer");
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $zip_filename . "\"");
    header("Content-Transfer-Encoding: binary");
    header("Content-Length: " . filesize($filepath . $zip_filename));
    ob_end_flush();
    @readfile($filepath . $zip_filename);
    $delete_filepath = 'sites/default/files/downloads/' . $folder_name;

    // http://stackoverflow.com/questions/7288029/php-delete-directory-that-is-not-empty
    function rmdir_recursive($dir) {
        foreach (scandir($dir) as $file) {
            if ('.' === $file || '..' === $file)
                continue;
            if (is_dir("$dir/$file"))
                rmdir_recursive("$dir/$file");
            else
                unlink("$dir/$file");
        }
        rmdir($dir);
    }

    rmdir_recursive($delete_filepath);
    /* $shared_fields_result = db_query("SELECT * FROM data_group_sharing ds, data_group_shared_instance di WHERE ds.share_id = di.shared_id AND
      ds.uid = 1 AND contact_uid = 86 AND status = 1");
      $shared_fields_arr = db_fetch_array($shared_fields_result);
      $shared_fields = unserialize($shared_fields_arr['shared_fields']);
      print_r($shared_fields);
      print($shared_fields_arr['sid']); */
}